<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - FITETSE Admin</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-color: #0b3d2e;
            --secondary-color: #3e9278;
            --accent-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
            --success-color: #198754;
            --dark-bg: #1a1a1a;
            --card-bg: #2d2d2d;
            --text-light: #ffffff;
            --text-muted: #b0b0b0;
            --border-color: #404040;
            --input-bg: #3a3a3a;
            --input-border: #555555;
            --input-focus: #3e9278;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            position: relative;
            overflow: hidden;
        }

        /* Animated Background */
        .bg-animation {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }

        .bg-animation::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="%23ffffff" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            animation: float 20s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }

        /* Reset Container */
        .reset-container {
            position: relative;
            z-index: 10;
            width: 100%;
            max-width: 450px;
            background: rgba(45, 45, 45, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.1);
            animation: slideUp 0.8s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Logo Section */
        .logo-section {
            text-align: center;
            margin-bottom: 40px;
        }

        .logo {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px;
            box-shadow: 0 10px 30px rgba(40, 167, 69, 0.3);
            animation: pulse 2s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .logo i {
            font-size: 2.5rem;
            color: white;
        }

        .brand-name {
            font-size: 2rem;
            font-weight: 700;
            color: var(--text-light);
            margin-bottom: 5px;
            background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .brand-subtitle {
            color: var(--text-muted);
            font-size: 1rem;
            font-weight: 400;
        }

        /* Form Section */
        .form-section {
            margin-bottom: 30px;
        }

        .form-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-light);
            margin-bottom: 10px;
            text-align: center;
        }

        .form-subtitle {
            color: var(--text-muted);
            text-align: center;
            margin-bottom: 30px;
            font-size: 0.95rem;
        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        .form-label {
            display: block;
            font-size: 0.9rem;
            font-weight: 500;
            color: var(--text-light);
            margin-bottom: 8px;
        }

        .input-group {
            position: relative;
        }

        .form-control {
            width: 100%;
            padding: 15px 20px 15px 50px;
            background: var(--input-bg);
            border: 2px solid var(--input-border);
            border-radius: 12px;
            color: var(--text-light);
            font-size: 1rem;
            transition: all 0.3s ease;
            outline: none;
        }

        .form-control:focus {
            border-color: var(--input-focus);
            box-shadow: 0 0 0 3px rgba(62, 146, 120, 0.1);
            background: var(--input-bg);
        }

        .form-control::placeholder {
            color: var(--text-muted);
        }

        .input-icon {
            position: absolute;
            left: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-muted);
            font-size: 1.2rem;
            transition: color 0.3s ease;
        }

        .form-control:focus + .input-icon {
            color: var(--input-focus);
        }

        .password-toggle {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-muted);
            cursor: pointer;
            font-size: 1.2rem;
            transition: color 0.3s ease;
        }

        .password-toggle:hover {
            color: var(--text-light);
        }

        /* Password Strength Indicator */
        .password-strength {
            margin-top: 10px;
            padding: 10px;
            border-radius: 8px;
            font-size: 0.85rem;
            display: none;
        }

        .password-strength.weak {
            background: rgba(220, 53, 69, 0.2);
            color: #f5c2c7;
            border: 1px solid rgba(220, 53, 69, 0.3);
        }

        .password-strength.medium {
            background: rgba(255, 193, 7, 0.2);
            color: #ffd43b;
            border: 1px solid rgba(255, 193, 7, 0.3);
        }

        .password-strength.strong {
            background: rgba(25, 135, 84, 0.2);
            color: #75b798;
            border: 1px solid rgba(25, 135, 84, 0.3);
        }

        /* Submit Button */
        .btn-reset {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
            border: none;
            border-radius: 12px;
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn-reset:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(40, 167, 69, 0.3);
        }

        .btn-reset:active {
            transform: translateY(0);
        }

        .btn-reset:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .btn-reset .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Alert Messages */
        .alert {
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 20px;
            border: none;
            font-weight: 500;
        }

        .alert-success {
            background: rgba(25, 135, 84, 0.2);
            color: #75b798;
            border: 1px solid rgba(25, 135, 84, 0.3);
        }

        .alert-danger {
            background: rgba(220, 53, 69, 0.2);
            color: #f5c2c7;
            border: 1px solid rgba(220, 53, 69, 0.3);
        }

        .alert-warning {
            background: rgba(255, 193, 7, 0.2);
            color: #ffd43b;
            border: 1px solid rgba(255, 193, 7, 0.3);
        }

        /* Footer */
        .reset-footer {
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid var(--border-color);
        }

        .footer-text {
            color: var(--text-muted);
            font-size: 0.9rem;
        }

        .footer-link {
            color: var(--accent-color);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .footer-link:hover {
            color: var(--secondary-color);
        }

        /* Responsive Design */
        @media (max-width: 576px) {
            .reset-container {
                padding: 30px 20px;
                margin: 10px;
            }

            .brand-name {
                font-size: 1.8rem;
            }

            .form-title {
                font-size: 1.3rem;
            }

            .form-control {
                padding: 12px 15px 12px 45px;
                font-size: 0.95rem;
            }

            .input-icon {
                left: 15px;
                font-size: 1.1rem;
            }

            .password-toggle {
                right: 15px;
                font-size: 1.1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Animated Background -->
    <div class="bg-animation"></div>

    <!-- Reset Container -->
    <div class="reset-container">
        <!-- Logo Section -->
        <div class="logo-section">
            <div class="logo">
                <i class="bi bi-shield-lock"></i>
            </div>
            <h1 class="brand-name">FITETSE</h1>
            <p class="brand-subtitle">Admin Dashboard</p>
        </div>

        <!-- Form Section -->
        <div class="form-section">
            <h2 class="form-title">Reset Password</h2>
            <p class="form-subtitle">Enter your new password below</p>
            
            <!-- Alert Messages -->
            <div id="alert-container"></div>

            <!-- Reset Form -->
            <form id="resetForm">
                <div class="form-group">
                    <label class="form-label" for="newPassword">New Password</label>
                    <div class="input-group">
                        <input 
                            type="password" 
                            class="form-control" 
                            id="newPassword" 
                            name="newPassword" 
                            placeholder="Enter new password"
                            required
                            minlength="8"
                        >
                        <i class="bi bi-lock input-icon"></i>
                        <button type="button" class="password-toggle" id="newPasswordToggle">
                            <i class="bi bi-eye"></i>
                        </button>
                    </div>
                    <div class="password-strength" id="passwordStrength"></div>
                </div>

                <div class="form-group">
                    <label class="form-label" for="confirmPassword">Confirm Password</label>
                    <div class="input-group">
                        <input 
                            type="password" 
                            class="form-control" 
                            id="confirmPassword" 
                            name="confirmPassword" 
                            placeholder="Confirm new password"
                            required
                            minlength="8"
                        >
                        <i class="bi bi-lock input-icon"></i>
                        <button type="button" class="password-toggle" id="confirmPasswordToggle">
                            <i class="bi bi-eye"></i>
                        </button>
                    </div>
                </div>

                <button type="submit" class="btn-reset" id="resetBtn">
                    <span class="spinner" id="resetSpinner"></span>
                    <span id="resetText">Reset Password</span>
                </button>
            </form>
        </div>

        <!-- Footer -->
        <div class="reset-footer">
            <p class="footer-text">
                Remember your password? 
                <a href="/admin/login" class="footer-link">Sign in here</a>
            </p>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // DOM Elements
        const resetForm = document.getElementById('resetForm');
        const newPasswordInput = document.getElementById('newPassword');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const newPasswordToggle = document.getElementById('newPasswordToggle');
        const confirmPasswordToggle = document.getElementById('confirmPasswordToggle');
        const resetBtn = document.getElementById('resetBtn');
        const resetSpinner = document.getElementById('resetSpinner');
        const resetText = document.getElementById('resetText');
        const alertContainer = document.getElementById('alertContainer');
        const passwordStrength = document.getElementById('passwordStrength');

        // Get token from URL
        const token = '<%= token %>';

        // Password Toggle Functions
        newPasswordToggle.addEventListener('click', function() {
            const type = newPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            newPasswordInput.setAttribute('type', type);
            
            const icon = this.querySelector('i');
            icon.className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash';
        });

        confirmPasswordToggle.addEventListener('click', function() {
            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordInput.setAttribute('type', type);
            
            const icon = this.querySelector('i');
            icon.className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash';
        });

        // Password Strength Checker
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];

            if (password.length >= 8) strength++;
            else feedback.push('At least 8 characters');

            if (/[a-z]/.test(password)) strength++;
            else feedback.push('Lowercase letter');

            if (/[A-Z]/.test(password)) strength++;
            else feedback.push('Uppercase letter');

            if (/[0-9]/.test(password)) strength++;
            else feedback.push('Number');

            if (/[^A-Za-z0-9]/.test(password)) strength++;
            else feedback.push('Special character');

            return { strength, feedback };
        }

        function updatePasswordStrength(password) {
            const result = checkPasswordStrength(password);
            
            if (password.length === 0) {
                passwordStrength.style.display = 'none';
                return;
            }

            passwordStrength.style.display = 'block';
            
            if (result.strength <= 2) {
                passwordStrength.className = 'password-strength weak';
                passwordStrength.innerHTML = `<i class="bi bi-exclamation-triangle"></i> Weak password. ${result.feedback.join(', ')}`;
            } else if (result.strength <= 4) {
                passwordStrength.className = 'password-strength medium';
                passwordStrength.innerHTML = `<i class="bi bi-exclamation-circle"></i> Medium strength. ${result.feedback.join(', ')}`;
            } else {
                passwordStrength.className = 'password-strength strong';
                passwordStrength.innerHTML = `<i class="bi bi-check-circle"></i> Strong password!`;
            }
        }

        newPasswordInput.addEventListener('input', function() {
            updatePasswordStrength(this.value);
        });

        // Form Validation
        function validatePassword(password) {
            const result = checkPasswordStrength(password);
            return result.strength >= 3; // At least medium strength
        }

        function showAlert(message, type = 'danger') {
            alertContainer.innerHTML = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
        }

        function clearAlert() {
            alertContainer.innerHTML = '';
        }

        function setLoading(loading) {
            if (loading) {
                resetBtn.disabled = true;
                resetSpinner.style.display = 'inline-block';
                resetText.textContent = 'Resetting...';
            } else {
                resetBtn.disabled = false;
                resetSpinner.style.display = 'none';
                resetText.textContent = 'Reset Password';
            }
        }

        // Form Submission
        resetForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Clear previous alerts
            clearAlert();
            
            // Get form data
            const newPassword = newPasswordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            
            // Validate inputs
            if (!newPassword) {
                showAlert('Please enter a new password');
                newPasswordInput.focus();
                return;
            }
            
            if (!validatePassword(newPassword)) {
                showAlert('Password must be at least medium strength');
                newPasswordInput.focus();
                return;
            }
            
            if (!confirmPassword) {
                showAlert('Please confirm your password');
                confirmPasswordInput.focus();
                return;
            }
            
            if (newPassword !== confirmPassword) {
                showAlert('Passwords do not match');
                confirmPasswordInput.focus();
                return;
            }
            
            // Set loading state
            setLoading(true);
            
            try {
                const response = await fetch(`/admin/reset-password/${token}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        newPassword,
                        confirmPassword
                    })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showAlert('Password reset successful! Redirecting to login...', 'success');
                    
                    // Redirect after short delay
                    setTimeout(() => {
                        window.location.href = '/admin/login';
                    }, 2000);
                    
                } else {
                    showAlert(data.message || 'Password reset failed. Please try again.');
                }
                
            } catch (error) {
                console.error('Reset password error:', error);
                showAlert('Network error. Please check your connection and try again.');
            } finally {
                setLoading(false);
            }
        });

        // Auto-focus new password input on page load
        window.addEventListener('load', function() {
            newPasswordInput.focus();
        });

        // Enter key navigation
        newPasswordInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                confirmPasswordInput.focus();
            }
        });

        confirmPasswordInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                resetForm.dispatchEvent(new Event('submit'));
            }
        });
    </script>
</body>
</html> 