<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Schedule Meeting - Fittese</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .meeting-card {
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }
        .meeting-card:hover {
            transform: translateY(-5px);
        }
        .employee-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            object-fit: cover;
        }
        .slot-time {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 14px;
        }
        .btn-book {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border: none;
            border-radius: 25px;
            padding: 10px 25px;
            color: white;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-book:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
        }
        .filter-section {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
        }
        .calendar-view {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .time-slot {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 15px;
            margin: 10px 0;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .time-slot:hover {
            border-color: #667eea;
            background: #f8f9ff;
        }
        .time-slot.selected {
            border-color: #28a745;
            background: #d4edda;
        }
        .time-slot.booked {
            border-color: #dc3545;
            background: #f8d7da;
            cursor: not-allowed;
            opacity: 0.6;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse">
                <div class="position-sticky pt-3">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/user/dashboard">
                                <i class="bi bi-house me-2"></i>Dashboard
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white active" href="/user/meetings">
                                <i class="bi bi-calendar-check me-2"></i>Schedule Meeting
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/user/my-meetings">
                                <i class="bi bi-calendar-event me-2"></i>My Meetings
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/user/profile">
                                <i class="bi bi-person me-2"></i>Profile
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/user/logout">
                                <i class="bi bi-box-arrow-right me-2"></i>Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">
                        <i class="bi bi-calendar-check me-2"></i>Schedule Meeting
                    </h1>
                </div>

                <!-- Filters -->
                <div class="filter-section">
                    <div class="row">
                        <div class="col-md-4">
                            <label for="employeeFilter" class="form-label">Select Employee</label>
                            <select class="form-select" id="employeeFilter">
                                <option value="">All Employees</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="dateFilter" class="form-label">Select Date</label>
                            <input type="date" class="form-control" id="dateFilter">
                        </div>
                        <div class="col-md-4">
                            <label for="meetingTypeFilter" class="form-label">Meeting Type</label>
                            <select class="form-select" id="meetingTypeFilter">
                                <option value="">All Types</option>
                                <option value="consultation">Consultation</option>
                                <option value="training">Training</option>
                                <option value="assessment">Assessment</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Available Employees -->
                <div class="row mb-4">
                    <div class="col-12">
                        <h3>Available Employees</h3>
                        <div id="employeesList" class="row">
                            <!-- Employees will be loaded here -->
                        </div>
                    </div>
                </div>

                <!-- Available Slots -->
                <div class="row">
                    <div class="col-12">
                        <h3>Available Time Slots</h3>
                        <div id="slotsList" class="row">
                            <!-- Slots will be loaded here -->
                        </div>
                    </div>
                </div>

                <!-- Booking Modal -->
                <div class="modal fade" id="bookingModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">
                                    <i class="bi bi-calendar-plus me-2"></i>Book Meeting
                                </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <form id="bookingForm">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="meetingTitle" class="form-label">Meeting Title</label>
                                                <input type="text" class="form-control" id="meetingTitle" required>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="meetingType" class="form-label">Meeting Type</label>
                                                <select class="form-select" id="meetingType" required>
                                                    <option value="">Select Type</option>
                                                    <option value="consultation">Consultation</option>
                                                    <option value="training">Training</option>
                                                    <option value="assessment">Assessment</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="meetingDescription" class="form-label">Description</label>
                                        <textarea class="form-control" id="meetingDescription" rows="3" placeholder="Brief description of what you'd like to discuss..."></textarea>
                                    </div>
                                    <div class="alert alert-info">
                                        <h6>Meeting Details:</h6>
                                        <p class="mb-1"><strong>Employee:</strong> <span id="selectedEmployeeName"></span></p>
                                        <p class="mb-1"><strong>Date:</strong> <span id="selectedDate"></span></p>
                                        <p class="mb-0"><strong>Time:</strong> <span id="selectedTime"></span></p>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn btn-primary" onclick="bookMeeting()">
                                    <span class="loading" style="display: none;">
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                        Booking...
                                    </span>
                                    <span class="normal">
                                        <i class="bi bi-check-circle me-2"></i>Book Meeting
                                    </span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let selectedSlot = null;
        let selectedEmployee = null;
        let availableSlots = [];
        let employees = [];

        // Load employees on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadEmployees();
            loadAvailableSlots();
            
            // Set default date to today
            document.getElementById('dateFilter').value = new Date().toISOString().split('T')[0];
        });

        // Load available employees
        async function loadEmployees() {
            try {
                const response = await fetch('/user/meetings/employees');
                const result = await response.json();
                
                if (result.success) {
                    employees = result.employees;
                    displayEmployees(employees);
                    populateEmployeeFilter(employees);
                }
            } catch (error) {
                console.error('Error loading employees:', error);
                showAlert('Failed to load employees', 'danger');
            }
        }

        // Display employees
        function displayEmployees(employeesList) {
            const container = document.getElementById('employeesList');
            container.innerHTML = '';

            employeesList.forEach(employee => {
                const employeeCard = document.createElement('div');
                employeeCard.className = 'col-md-4 col-lg-3 mb-3';
                employeeCard.innerHTML = `
                    <div class="card meeting-card h-100">
                        <div class="card-body text-center">
                            <img src="${employee.avatar || '/images/default-avatar.png'}" 
                                 class="employee-avatar mb-3" 
                                 alt="${employee.name}">
                            <h5 class="card-title">${employee.name}</h5>
                            <p class="card-text text-muted">${employee.employeetype?.type || 'Fitness Trainer'}</p>
                            <p class="card-text small">
                                <i class="bi bi-envelope me-1"></i>${employee.email}
                            </p>
                            <button class="btn btn-outline-primary btn-sm" 
                                    onclick="selectEmployee('${employee.id}')">
                                <i class="bi bi-calendar-plus me-1"></i>View Slots
                            </button>
                        </div>
                    </div>
                `;
                container.appendChild(employeeCard);
            });
        }

        // Populate employee filter
        function populateEmployeeFilter(employeesList) {
            const filter = document.getElementById('employeeFilter');
            filter.innerHTML = '<option value="">All Employees</option>';
            
            employeesList.forEach(employee => {
                const option = document.createElement('option');
                option.value = employee.id;
                option.textContent = employee.name;
                filter.appendChild(option);
            });
        }

        // Load available slots
        async function loadAvailableSlots() {
            try {
                const date = document.getElementById('dateFilter').value;
                const employeeId = document.getElementById('employeeFilter').value;
                
                let url = '/user/meetings/available-slots';
                const params = new URLSearchParams();
                if (date) params.append('date', date);
                if (employeeId) params.append('employeeId', employeeId);
                
                if (params.toString()) {
                    url += '?' + params.toString();
                }

                const response = await fetch(url);
                const result = await response.json();
                
                if (result.success) {
                    availableSlots = result.slots;
                    displaySlots(availableSlots);
                }
            } catch (error) {
                console.error('Error loading slots:', error);
                showAlert('Failed to load available slots', 'danger');
            }
        }

        // Display slots
        function displaySlots(slotsList) {
            const container = document.getElementById('slotsList');
            container.innerHTML = '';

            if (slotsList.length === 0) {
                container.innerHTML = `
                    <div class="col-12">
                        <div class="alert alert-info text-center">
                            <i class="bi bi-info-circle me-2"></i>
                            No available slots found for the selected criteria.
                        </div>
                    </div>
                `;
                return;
            }

            slotsList.forEach(slot => {
                const slotCard = document.createElement('div');
                slotCard.className = 'col-md-6 col-lg-4 mb-3';
                slotCard.innerHTML = `
                    <div class="card meeting-card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                <div>
                                    <h6 class="card-title">${slot.employee?.name || 'Unassigned'}</h6>
                                    <p class="card-text small text-muted">
                                        ${slot.employee?.employeetype?.type || 'Fitness Trainer'}
                                    </p>
                                </div>
                                <img src="${slot.employee?.avatar || '/images/default-avatar.png'}" 
                                     class="employee-avatar" 
                                     alt="${slot.employee?.name || 'Employee'}">
                            </div>
                            <div class="slot-time mb-3">
                                <i class="bi bi-clock me-1"></i>
                                ${new Date(slot.start).toLocaleTimeString()} - ${new Date(slot.end).toLocaleTimeString()}
                            </div>
                            <div class="text-center">
                                <button class="btn btn-book" onclick="selectSlot('${slot._id}', '${slot.employee?.name || 'Unassigned'}', '${slot.start}', '${slot.end}')">
                                    <i class="bi bi-calendar-check me-1"></i>Book This Slot
                                </button>
                            </div>
                        </div>
                    </div>
                `;
                container.appendChild(slotCard);
            });
        }

        // Select employee
        function selectEmployee(employeeId) {
            document.getElementById('employeeFilter').value = employeeId;
            loadAvailableSlots();
        }

        // Select slot for booking
        function selectSlot(slotId, employeeName, startTime, endTime) {
            selectedSlot = slotId;
            selectedEmployee = employeeName;
            
            document.getElementById('selectedEmployeeName').textContent = employeeName;
            document.getElementById('selectedDate').textContent = new Date(startTime).toLocaleDateString();
            document.getElementById('selectedTime').textContent = `${new Date(startTime).toLocaleTimeString()} - ${new Date(endTime).toLocaleTimeString()}`;
            
            const modal = new bootstrap.Modal(document.getElementById('bookingModal'));
            modal.show();
        }

        // Book meeting
        async function bookMeeting() {
            const title = document.getElementById('meetingTitle').value;
            const type = document.getElementById('meetingType').value;
            const description = document.getElementById('meetingDescription').value;
            
            if (!title || !type) {
                showAlert('Please fill in all required fields', 'danger');
                return;
            }

            const btn = document.querySelector('#bookingModal .btn-primary');
            const loadingSpan = btn.querySelector('.loading');
            const normalSpan = btn.querySelector('.normal');
            
            // Show loading state
            loadingSpan.style.display = 'inline';
            normalSpan.style.display = 'none';
            btn.disabled = true;

            try {
                const response = await fetch('/user/meetings/book', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        slotId: selectedSlot,
                        employeeId: getEmployeeIdByName(selectedEmployee),
                        title: title,
                        description: description,
                        meetingType: type
                    })
                });

                const result = await response.json();

                if (result.success) {
                    showAlert('Meeting booked successfully!', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('bookingModal')).hide();
                    
                    // Reset form
                    document.getElementById('bookingForm').reset();
                    
                    // Reload slots
                    loadAvailableSlots();
                } else {
                    showAlert(result.message || 'Failed to book meeting', 'danger');
                }
            } catch (error) {
                console.error('Booking error:', error);
                showAlert('Network error. Please try again.', 'danger');
            } finally {
                // Reset button state
                loadingSpan.style.display = 'none';
                normalSpan.style.display = 'inline';
                btn.disabled = false;
            }
        }

        // Get employee ID by name
        function getEmployeeIdByName(name) {
            const employee = employees.find(emp => emp.name === name);
            return employee ? employee.id : null;
        }

        // Event listeners for filters
        document.getElementById('employeeFilter').addEventListener('change', loadAvailableSlots);
        document.getElementById('dateFilter').addEventListener('change', loadAvailableSlots);
        document.getElementById('meetingTypeFilter').addEventListener('change', loadAvailableSlots);

        // Show alert message
        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.top = '20px';
            alertDiv.style.right = '20px';
            alertDiv.style.zIndex = '9999';
            alertDiv.innerHTML = `
                <i class="bi bi-${type === 'success' ? 'check-circle' : 'exclamation-triangle'}-fill me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            // Auto-dismiss after 5 seconds
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }
    </script>
</body>
</html> 